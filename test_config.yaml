# Download test data from: https://osf.io/8jz7e/
model_path: /Users/w.zhao/Projects/MemSeg/Results_from_Ravi/3DUnet_Data_Ravi/Models/240404_RetrainKidney_firsttry/CHECKPOINT_DIR/best_checkpoint.pytorch
model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # determines the order of operators in a single layer (gcr - GroupNorm+Conv3d+ReLU)
  layer_order: gcr
  # number of features at each level of the U-Net
  f_maps: [16, 32, 64, 128, 256]
  # number of groups in the groupnorm
  num_groups: 8
  # if True applies the final normalization layer (sigmoid or softmax), otherwise the networks returns the output from the final convolution layer; use False for regression problems, e.g. de-noising
  is_segmentation: false
# predictor:
  #name: 'StandardPredictor'
loaders:
  # save predictions to output_dir
  output_dir: /Users/w.zhao/Projects/MemSeg/Results/Test
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 1
  # how many subprocesses to use for data loading
  num_workers: 8
  # test loaders configuration
  test:
    file_paths:
      - /Users/w.zhao/Projects/MemSeg/Dataset/raw_memb/test

    slice_builder:
      name: SliceBuilder
      patch_shape: [16, 128, 128]
      stride_shape: [16, 128, 128]
      # halo around each patch
      halo_shape: [16, 32, 32]

    transformer:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true
